@model EntityLayer.Concrete.Blog

@{
    ViewData["Title"] = "BlogAdd";
    Layout = "~/Views/Shared/WriterLayout.cshtml";
}

<div class="card">
    <div class="card-body">
        @using (Html.BeginForm("BlogAdd", "Blog", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(x => x.BlogTitle, "Blog Başlığı", new { @class = "control-label" })
                @Html.TextBoxFor(x => x.BlogTitle, new { @class = "form-control", placeholder = "Blog Başlığını Giriniz" })
                @Html.ValidationMessageFor(x => x.BlogTitle, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.BlogThumbnailImage, "Blog Küçük Resmi", new { @class = "control-label" })
                @Html.TextBoxFor(x => x.BlogThumbnailImage, new { @class = "form-control", placeholder = "Blog Küçük Resmini Yükleyiniz" })
            </div>
            <div class="form-group">
                @Html.Label("Blog Resmi")
                <input type="file" name="file" class="file-upload-default" style="display:none;">
                <div class="input-group col-xs-12">
                    <input type="text" class="form-control file-upload-info" disabled placeholder="Blog Resmini Yükleyiniz">
                    <span class="input-group-append">
                        <button class="file-upload-browse btn btn-gradient-primary" type="button">Yükle</button>
                    </span>
                    @Html.ValidationMessageFor(x => x.BlogImage, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.CategoryID, "Kategori", new { @class = "control-label" })
                @Html.DropDownListFor(x => x.CategoryID, (IEnumerable<SelectListItem>)ViewBag.cv, "Kategori Seçiniz", new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.CategoryID, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.BlogContent, "Blog İçeriği", new { @class = "control-label" })
                @Html.TextAreaFor(x => x.BlogContent, new { @class = "form-control", placeholder = "Blog İçeriğini Yazınız", rows = "40" })
                @Html.ValidationMessageFor(x => x.BlogContent, "", new { @class = "text-danger" })
            </div>
            <button class="btn btn-gradient-primary mr-2" type="submit">Bloğu Yayınla</button>
        }
    </div>
</div>
